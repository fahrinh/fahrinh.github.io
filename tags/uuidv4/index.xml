<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>UUIDv4 - Tag - Fahri NH</title><link>https://fahri.id/tags/uuidv4/</link><description>UUIDv4 - Tag - Fahri NH</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sun, 19 Apr 2020 12:38:13 +0700</lastBuildDate><atom:link href="https://fahri.id/tags/uuidv4/" rel="self" type="application/rss+xml"/><item><title>Generate Sequential UUIDv4 in Elixir</title><link>https://fahri.id/posts/generate-sequential-uuidv4-in-elixir/</link><pubDate>Sun, 19 Apr 2020 12:38:13 +0700</pubDate><author><name>Fahri</name></author><guid>https://fahri.id/posts/generate-sequential-uuidv4-in-elixir/</guid><description>&lt;p>The idea is simple. Sequential UUIDv4 (128 bit) consists of &lt;code>unix timestamp (32 bit) + random bytes (96 bit)&lt;/code>&lt;/p></description></item></channel></rss>